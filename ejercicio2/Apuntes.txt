COMO FUNCIONA EL CODIGO

1. Obtener los parametros ingresados
2. Verifico que sean parametros validos
    2.1- Hago una lista y verifico que los argumentos sean iguales a los paremetros de esa lista
    2.2- Si alguno de esos parametros es -h, le despliego el menu de ayuda nada mas.
3. Verifico que los parametros correspondan a M O R y hago un valor, que corresponde a esa convinacion de letras
4. Ejecuto en funcion de lo que se le haya ingresado.

suma=0

R M O

R O

for i in parametrosIngresados
    if i == parametrosValidosMOR[1] (es m):
        suma = suma + 1
    elif i == parametrosValidosMOR[2] (es o):
        suma = suma + 2
    elif i == parametrosValidosMOR[3] (es r):
        suma = suma + 4

print(suma)

if suma == 7: 
    es MOR subprocess.run("./Testing.sh -m -o -r /home/administrator/DevOps/Obligatorio", shell=True, capture_output=True,text=True,)
elif suma == 5:
    es MR
elif suma == 4:
    es R
elif suma == 3:
    es MO
elif suma == 2:
    es O
elif suma == 1:
    es M
elif suma == 0:
    es sin parametros 

                        Valor total:
n Oa i e    - 512       
n Oa i      - 256
n Oa        - 128
n Oc i e    - 64
n Oc i      - 32
n Oc        - 16
n Ol i e    - 8
n Ol i      - 4         
n Ol        - 2         
n           - 1         

10 posibilidades

si el largo de los modificadores es mayor a 3 empieza a identificar
cuales se le ingresaron

Identifico cual es la opcion que me dijiste


#Full Path donde se ubica el archivo auxiliar
fullpath='/home/administrator/DevOps/Obligatorio/aux'

# En Aux, se debe escribir la ruta Absoluta a /tmp/
with open('aux','w') as salida:
    res = subprocess.run("./ej1_enOBLIsinUBI.sh -m -o", stdout=salida, shell=True,text=True,)
    print(res.stderr) #Respuesta con error.


    formatoppid = '{}.tmp'.format(os.getppid()) #Definir PPID.tmp
    os.rename(fullpath, formatoppid) #Cambio de nombre del fullpath al formatonuevo

#Probar como Reordenar la salida de TMP por salida STDOUT

bands= list()

filename = '/home/administrator/DevOps/Obligatorio/'+str(formatoppid)
with open (filename) as fin:
    for line in fin:
        bands.append(line.strip())

bands.sort()

filename= 'band_sorted.txt'
with open(filename, 'w') as fout:
    for band in bands:
        fout.write(band + '\n')

with open(filename) as infile:
          lines = infile.readlines()
          for line in lines:
	      print(line)

filename= 'band_sorted.txt'
with open(filename, 'w') as fout:
    for number, band in enumerate(bands):
        if number not in [1,2,3]:
            fout.write(band + '\n')